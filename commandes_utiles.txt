first : 
"git init" to initialize the index. 
Then 
"git add myfile.txt" to add files to the index, or 
"git add . ". This add files to the git index. Being inside the folder isn't good enough ! 
Once a new file had been add to the index via 
"git add", you must commit it. To describe your commit, use -m option as follow : 
"git commit -m " This is my first commit !" "
To obtain an history of all the commits made, ask git ! : 
" git log "
Remark : For now, if you modify an already present file in your git index, the new versions is not saved under a commit. You need to re-add the new versions of your file inside the git index : 
"git add "myfile.txt" ", and then recommit it using 
"git commit -m "I've update myfile.txt"". You can do both of these action using : 
"git commit -a -m "I've update myfile.txt"". The -a option specify to update files already contains inside the index.

To go back on a commit (bug discovered for example), you can type : 
"git checkout SHAduCommit"
You can create a new branch from this commit (for example)
If you want to return to the main branch, just type : 
"git checkout master"

Oh baby oops I did it again...
If you have made a mistake by creating a commit, you can't undo it (it's part of history now)
However, you can do the opposite commit using : 
"git revert SHAduCommit". This will create anewcommit, opposite to the previous one. 
If you want to change the name of your commit, before you have it "pushed", you can type : 
"git commit --amend -m "my new message""
If you want to undo all changes you have made, and if you haven't commited, you can do : 
"git reset --hard"

Another git function : 
"git status". It precise which branch we are in, and if modification have to be saved

I change my name. is it ok when the repository is open? Yes it is

To download a repository from GitHub (or GitLab I suppose), use : 
"git clone https://mysuperadressIgotOnGitHub_Lab". Then you can do all the modification as we discussed before. 

To upload modificated files, for examples the ones you previsouly download from https://mysuperadressIgotOnGitHub_Lab, do :
"git push origin master" this upload changed made in "master" into the remote branch "origin"

Most of the time, you don't need to redownload all the repository each time a modification is made. the function : 
"git pull origin master" (origin and master being the same as pus function) allow you to syncronize local repository so that you're up to date with the remote branch, hence with other people working on the 
same project. 
A correct use of push and pull function allow everyone to work on the same project.

If you have created your repository on a local machine, you do not have an "origin" yet. Hence, you can create a repository inside GitHub (No command line version so far? ), and then link it to your local 
project using : 
"git remote add origin https://mysuperadressIgotonGithHub_Lab"

You are by default working on branch called master. However, you can create a new branch, as a copy of existing branch in which you are, by typing : 
"git branch branch_test". You can list several branch by typing :
"git branch".  The branch with a * is the branch you are currently in. 
You can move from a branch to another using your monkey friends, or the command :
"git checkout branch_test". One could note that this command is the same to acces a commit. 
You can also do both creation and placement inside the branch using : 
"git checkout -b branch_test"
If you have stuff on a branch br_A that you want to put in a branch br_B, you must do :
"git checkout br_A"
"git merge br_B"
